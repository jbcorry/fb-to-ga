// _functions.scss

////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////

// -----------------------------------------------------
// Functions: Media Query Functions and Settings
// -----------------------------------------------------
$small-range: (0em, 40em);
$medium-range: (40.063em, 63em);
$large-range: (63.063em, 90em);

$xlarge-range: (90.063em, 120em);
$xxlarge-range: (120.063em);

@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

$screen: "only screen";

$landscape: "#{$screen} and (orientation: landscape)";
$portrait: "#{$screen} and (orientation: portrait)";

$small-up: $screen;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})";

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})";
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})";

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})";
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})";

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})";
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})";

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})";
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})";

$retina: "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)";

// -----------------------------------------------------
// Functions: Vertical Align
// -----------------------------------------------------
@mixin vertical-align() {
  position: relative;
  top: 50%;
  @include transform(translateY(-50%));
}

// -----------------------------------------------------
// Functions: Max-Width and Center Mixin
// -----------------------------------------------------
@mixin max-width($width) {
  max-width: $width;
  margin: 0 auto;
}

// ------------------------------------------------------------
// Mixins:  SVG w/ PNG fallback 1x 2x
// ------------------------------------------------------------
$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

// ------------------------------------------------------------
// Mixins: Transition
// ------------------------------------------------------------
@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

// ------------------------------------------------------------
// Mixins: CSS3 Gradient
// ------------------------------------------------------------
/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
  background-color: $to;
  background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(to bottom, $from, $to);
}

// ------------------------------------------------------------
// Mixins: Box-Sizing
// ------------------------------------------------------------
/* @include box-sizing(border-box); */
@mixin box-sizing($type: border-box) {
  -webkit-box-sizing: $type;
  -moz-box-sizing:    $type;
  -ms-box-sizing:     $type;
  box-sizing:         $type;
}

// ------------------------------------------------------------
// Mixins: FPO Shapes
// ------------------------------------------------------------
@mixin circle-fpo() {
  background: $color-purple-2;
  height: 114px;
  width: 114px;
  display: inline-block;
  @include border-top-radius(50%);
  @include border-right-radius(50%);
  @include border-bottom-radius(50%);
  @include border-left-radius(50%);
}

// ------------------------------------------------------------
// Omega Reset
// ------------------------------------------------------------
@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}

// ------------------------------------------------------------
// Mixins: REM Calculations
// ------------------------------------------------------------
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: calculateRem($size);
}


@mixin boxShadowOne() {
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.10);
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.10);
  -webkit-background-clip: padding-box;
          background-clip: padding-box;
}

@mixin boxShadowTwo() {
  box-shadow: 8px 5px 20px rgba(0, 0, 0, 0.1);
  -webkit-box-shadow:8px 5px 20px rgba(0, 0, 0, 0.1);
  -webkit-background-clip: padding-box;
          background-clip: padding-box;
}

